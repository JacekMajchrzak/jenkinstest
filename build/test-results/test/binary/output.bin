?Stage 'validate' skipped due to when expression returned false
$post failure skipped as not FAILURE
!post unstable skipped as SUCCESS
M>>>>>> pipeline call stack -------------------------------------------------
   Jenkinsfile.run()
0      Jenkinsfile.pipeline(groovy.lang.Closure)
0         Jenkinsfile.agent(groovy.lang.Closure)
5         Jenkinsfile.parameters(groovy.lang.Closure)
w            Jenkinsfile.booleanParam({defaultValue=false, description=Whether to run validation stage, name=VALIDATE})
”            Jenkinsfile.string({defaultValue=clean build test -i, description=Tasks and options for the gradle command, name=GRADLE_TASKS_OPTIONS})
2         Jenkinsfile.options(groovy.lang.Closure)
6            Jenkinsfile.logRotator({numToKeepStr=10})
-            Jenkinsfile.buildDiscarder(null)
%            Jenkinsfile.timestamps()
3         Jenkinsfile.triggers(groovy.lang.Closure)
-            Jenkinsfile.pollSCM(*/5 * * * *)
1         Jenkinsfile.stages(groovy.lang.Closure)
=            Jenkinsfile.stage(Checkout, groovy.lang.Closure)
6               Jenkinsfile.steps(groovy.lang.Closure)
*                  Jenkinsfile.deleteDir()
<                  Jenkinsfile.checkout(groovy.lang.Closure)
:            Jenkinsfile.stage(build, groovy.lang.Closure)
6               Jenkinsfile.steps(groovy.lang.Closure)
c                  Jenkinsfile.tool({name=GRADLE_3, type=hudson.plugins.gradle.GradleInstallation})
X                  Jenkinsfile.withEnv([GRADLE_HOME=GRADLE_3_HOME], groovy.lang.Closure)
c                     Jenkinsfile.withEnv([PATH=/some/path:GRADLE_3_HOME/bin], groovy.lang.Closure)
D                        Jenkinsfile.echo(GRADLE_HOME=GRADLE_3_HOME)
L                        Jenkinsfile.echo(PATH=/some/path:GRADLE_3_HOME/bin)
C                        Jenkinsfile.sh(gradle clean build test -i)
=            Jenkinsfile.stage(validate, groovy.lang.Closure)
5               Jenkinsfile.when(groovy.lang.Closure)
>                  Jenkinsfile.expression(groovy.lang.Closure)
/         Jenkinsfile.post(groovy.lang.Closure)
4            Jenkinsfile.always(groovy.lang.Closure)
?               Jenkinsfile.echo(pipeline unit tests completed)
5            Jenkinsfile.success(groovy.lang.Closure)
<               Jenkinsfile.echo(pipeline unit tests PASSED)
5            Jenkinsfile.failure(groovy.lang.Closure)
5            Jenkinsfile.changed(groovy.lang.Closure)
J               Jenkinsfile.echo(pipeline unit tests results have CHANGED)
6            Jenkinsfile.unstable(groovy.lang.Closure)
   Jenkinsfile.execute()

$post failure skipped as not FAILURE
!post unstable skipped as SUCCESS
M>>>>>> pipeline call stack -------------------------------------------------
   Jenkinsfile.run()
0      Jenkinsfile.pipeline(groovy.lang.Closure)
0         Jenkinsfile.agent(groovy.lang.Closure)
5         Jenkinsfile.parameters(groovy.lang.Closure)
w            Jenkinsfile.booleanParam({defaultValue=false, description=Whether to run validation stage, name=VALIDATE})
”            Jenkinsfile.string({defaultValue=clean build test -i, description=Tasks and options for the gradle command, name=GRADLE_TASKS_OPTIONS})
2         Jenkinsfile.options(groovy.lang.Closure)
6            Jenkinsfile.logRotator({numToKeepStr=10})
-            Jenkinsfile.buildDiscarder(null)
%            Jenkinsfile.timestamps()
3         Jenkinsfile.triggers(groovy.lang.Closure)
-            Jenkinsfile.pollSCM(*/5 * * * *)
1         Jenkinsfile.stages(groovy.lang.Closure)
=            Jenkinsfile.stage(Checkout, groovy.lang.Closure)
6               Jenkinsfile.steps(groovy.lang.Closure)
*                  Jenkinsfile.deleteDir()
<                  Jenkinsfile.checkout(groovy.lang.Closure)
:            Jenkinsfile.stage(build, groovy.lang.Closure)
6               Jenkinsfile.steps(groovy.lang.Closure)
c                  Jenkinsfile.tool({name=GRADLE_3, type=hudson.plugins.gradle.GradleInstallation})
X                  Jenkinsfile.withEnv([GRADLE_HOME=GRADLE_3_HOME], groovy.lang.Closure)
c                     Jenkinsfile.withEnv([PATH=/some/path:GRADLE_3_HOME/bin], groovy.lang.Closure)
D                        Jenkinsfile.echo(GRADLE_HOME=GRADLE_3_HOME)
L                        Jenkinsfile.echo(PATH=/some/path:GRADLE_3_HOME/bin)
4                        Jenkinsfile.sh(gradle test)
=            Jenkinsfile.stage(validate, groovy.lang.Closure)
5               Jenkinsfile.when(groovy.lang.Closure)
>                  Jenkinsfile.expression(groovy.lang.Closure)
6               Jenkinsfile.steps(groovy.lang.Closure)
;                  Jenkinsfile.sh(TODO_VALIDATION_COMMANDS)
/         Jenkinsfile.post(groovy.lang.Closure)
4            Jenkinsfile.always(groovy.lang.Closure)
?               Jenkinsfile.echo(pipeline unit tests completed)
5            Jenkinsfile.success(groovy.lang.Closure)
<               Jenkinsfile.echo(pipeline unit tests PASSED)
5            Jenkinsfile.failure(groovy.lang.Closure)
5            Jenkinsfile.changed(groovy.lang.Closure)
J               Jenkinsfile.echo(pipeline unit tests results have CHANGED)
6            Jenkinsfile.unstable(groovy.lang.Closure)
   Jenkinsfile.execute()

?Stage 'validate' skipped due to when expression returned false
$post failure skipped as not FAILURE
!post unstable skipped as SUCCESS
M>>>>>> pipeline call stack -------------------------------------------------
   Jenkinsfile.run()
0      Jenkinsfile.pipeline(groovy.lang.Closure)
0         Jenkinsfile.agent(groovy.lang.Closure)
5         Jenkinsfile.parameters(groovy.lang.Closure)
w            Jenkinsfile.booleanParam({defaultValue=false, description=Whether to run validation stage, name=VALIDATE})
”            Jenkinsfile.string({defaultValue=clean build test -i, description=Tasks and options for the gradle command, name=GRADLE_TASKS_OPTIONS})
2         Jenkinsfile.options(groovy.lang.Closure)
6            Jenkinsfile.logRotator({numToKeepStr=10})
-            Jenkinsfile.buildDiscarder(null)
%            Jenkinsfile.timestamps()
3         Jenkinsfile.triggers(groovy.lang.Closure)
-            Jenkinsfile.pollSCM(*/5 * * * *)
1         Jenkinsfile.stages(groovy.lang.Closure)
=            Jenkinsfile.stage(Checkout, groovy.lang.Closure)
6               Jenkinsfile.steps(groovy.lang.Closure)
*                  Jenkinsfile.deleteDir()
<                  Jenkinsfile.checkout(groovy.lang.Closure)
:            Jenkinsfile.stage(build, groovy.lang.Closure)
6               Jenkinsfile.steps(groovy.lang.Closure)
c                  Jenkinsfile.tool({name=GRADLE_3, type=hudson.plugins.gradle.GradleInstallation})
X                  Jenkinsfile.withEnv([GRADLE_HOME=GRADLE_3_HOME], groovy.lang.Closure)
c                     Jenkinsfile.withEnv([PATH=/some/path:GRADLE_3_HOME/bin], groovy.lang.Closure)
D                        Jenkinsfile.echo(GRADLE_HOME=GRADLE_3_HOME)
L                        Jenkinsfile.echo(PATH=/some/path:GRADLE_3_HOME/bin)
:                        Jenkinsfile.sh(gradle build test)
=            Jenkinsfile.stage(validate, groovy.lang.Closure)
5               Jenkinsfile.when(groovy.lang.Closure)
>                  Jenkinsfile.expression(groovy.lang.Closure)
/         Jenkinsfile.post(groovy.lang.Closure)
4            Jenkinsfile.always(groovy.lang.Closure)
?               Jenkinsfile.echo(pipeline unit tests completed)
5            Jenkinsfile.success(groovy.lang.Closure)
<               Jenkinsfile.echo(pipeline unit tests PASSED)
5            Jenkinsfile.failure(groovy.lang.Closure)
5            Jenkinsfile.changed(groovy.lang.Closure)
J               Jenkinsfile.echo(pipeline unit tests results have CHANGED)
6            Jenkinsfile.unstable(groovy.lang.Closure)
   Jenkinsfile.execute()

1Stage 'validate' skipped - job status: 'FAILURE'
$post success skipped as not SUCCESS
!post unstable skipped as SUCCESS
M>>>>>> pipeline call stack -------------------------------------------------
   Jenkinsfile.run()
0      Jenkinsfile.pipeline(groovy.lang.Closure)
0         Jenkinsfile.agent(groovy.lang.Closure)
5         Jenkinsfile.parameters(groovy.lang.Closure)
w            Jenkinsfile.booleanParam({defaultValue=false, description=Whether to run validation stage, name=VALIDATE})
”            Jenkinsfile.string({defaultValue=clean build test -i, description=Tasks and options for the gradle command, name=GRADLE_TASKS_OPTIONS})
2         Jenkinsfile.options(groovy.lang.Closure)
6            Jenkinsfile.logRotator({numToKeepStr=10})
-            Jenkinsfile.buildDiscarder(null)
%            Jenkinsfile.timestamps()
3         Jenkinsfile.triggers(groovy.lang.Closure)
-            Jenkinsfile.pollSCM(*/5 * * * *)
1         Jenkinsfile.stages(groovy.lang.Closure)
=            Jenkinsfile.stage(Checkout, groovy.lang.Closure)
6               Jenkinsfile.steps(groovy.lang.Closure)
*                  Jenkinsfile.deleteDir()
<                  Jenkinsfile.checkout(groovy.lang.Closure)
:            Jenkinsfile.stage(build, groovy.lang.Closure)
6               Jenkinsfile.steps(groovy.lang.Closure)
c                  Jenkinsfile.tool({name=GRADLE_3, type=hudson.plugins.gradle.GradleInstallation})
X                  Jenkinsfile.withEnv([GRADLE_HOME=GRADLE_3_HOME], groovy.lang.Closure)
c                     Jenkinsfile.withEnv([PATH=/some/path:GRADLE_3_HOME/bin], groovy.lang.Closure)
D                        Jenkinsfile.echo(GRADLE_HOME=GRADLE_3_HOME)
L                        Jenkinsfile.echo(PATH=/some/path:GRADLE_3_HOME/bin)
C                        Jenkinsfile.sh(gradle clean build test -i)
=            Jenkinsfile.stage(validate, groovy.lang.Closure)
/         Jenkinsfile.post(groovy.lang.Closure)
4            Jenkinsfile.always(groovy.lang.Closure)
?               Jenkinsfile.echo(pipeline unit tests completed)
5            Jenkinsfile.success(groovy.lang.Closure)
5            Jenkinsfile.failure(groovy.lang.Closure)
<               Jenkinsfile.echo(pipeline unit tests FAILED)
5            Jenkinsfile.changed(groovy.lang.Closure)
J               Jenkinsfile.echo(pipeline unit tests results have CHANGED)
6            Jenkinsfile.unstable(groovy.lang.Closure)
   Jenkinsfile.execute()

?Stage 'validate' skipped due to when expression returned false
$post failure skipped as not FAILURE
!post unstable skipped as SUCCESS
M>>>>>> pipeline call stack -------------------------------------------------
   Jenkinsfile.run()
0      Jenkinsfile.pipeline(groovy.lang.Closure)
0         Jenkinsfile.agent(groovy.lang.Closure)
5         Jenkinsfile.parameters(groovy.lang.Closure)
w            Jenkinsfile.booleanParam({defaultValue=false, description=Whether to run validation stage, name=VALIDATE})
”            Jenkinsfile.string({defaultValue=clean build test -i, description=Tasks and options for the gradle command, name=GRADLE_TASKS_OPTIONS})
2         Jenkinsfile.options(groovy.lang.Closure)
6            Jenkinsfile.logRotator({numToKeepStr=10})
-            Jenkinsfile.buildDiscarder(null)
%            Jenkinsfile.timestamps()
3         Jenkinsfile.triggers(groovy.lang.Closure)
-            Jenkinsfile.pollSCM(*/5 * * * *)
1         Jenkinsfile.stages(groovy.lang.Closure)
=            Jenkinsfile.stage(Checkout, groovy.lang.Closure)
6               Jenkinsfile.steps(groovy.lang.Closure)
*                  Jenkinsfile.deleteDir()
<                  Jenkinsfile.checkout(groovy.lang.Closure)
:            Jenkinsfile.stage(build, groovy.lang.Closure)
6               Jenkinsfile.steps(groovy.lang.Closure)
c                  Jenkinsfile.tool({name=GRADLE_3, type=hudson.plugins.gradle.GradleInstallation})
X                  Jenkinsfile.withEnv([GRADLE_HOME=GRADLE_3_HOME], groovy.lang.Closure)
c                     Jenkinsfile.withEnv([PATH=/some/path:GRADLE_3_HOME/bin], groovy.lang.Closure)
D                        Jenkinsfile.echo(GRADLE_HOME=GRADLE_3_HOME)
L                        Jenkinsfile.echo(PATH=/some/path:GRADLE_3_HOME/bin)
C                        Jenkinsfile.sh(gradle clean build test -i)
=            Jenkinsfile.stage(validate, groovy.lang.Closure)
5               Jenkinsfile.when(groovy.lang.Closure)
>                  Jenkinsfile.expression(groovy.lang.Closure)
/         Jenkinsfile.post(groovy.lang.Closure)
4            Jenkinsfile.always(groovy.lang.Closure)
?               Jenkinsfile.echo(pipeline unit tests completed)
5            Jenkinsfile.success(groovy.lang.Closure)
<               Jenkinsfile.echo(pipeline unit tests PASSED)
5            Jenkinsfile.failure(groovy.lang.Closure)
5            Jenkinsfile.changed(groovy.lang.Closure)
J               Jenkinsfile.echo(pipeline unit tests results have CHANGED)
6            Jenkinsfile.unstable(groovy.lang.Closure)
   Jenkinsfile.execute()

1Stage 'Checkout' skipped - job status: 'FAILURE'
.Stage 'build' skipped - job status: 'FAILURE'
1Stage 'validate' skipped - job status: 'FAILURE'
$post success skipped as not SUCCESS
!post unstable skipped as SUCCESS
M>>>>>> pipeline call stack -------------------------------------------------
   Jenkinsfile.run()
0      Jenkinsfile.pipeline(groovy.lang.Closure)
0         Jenkinsfile.agent(groovy.lang.Closure)
5         Jenkinsfile.parameters(groovy.lang.Closure)
w            Jenkinsfile.booleanParam({defaultValue=false, description=Whether to run validation stage, name=VALIDATE})
”            Jenkinsfile.string({defaultValue=clean build test -i, description=Tasks and options for the gradle command, name=GRADLE_TASKS_OPTIONS})
2         Jenkinsfile.options(groovy.lang.Closure)
6            Jenkinsfile.logRotator({numToKeepStr=10})
-            Jenkinsfile.buildDiscarder(null)
%            Jenkinsfile.timestamps()
3         Jenkinsfile.triggers(groovy.lang.Closure)
-            Jenkinsfile.pollSCM(*/5 * * * *)
1         Jenkinsfile.stages(groovy.lang.Closure)
=            Jenkinsfile.stage(Checkout, groovy.lang.Closure)
:            Jenkinsfile.stage(build, groovy.lang.Closure)
=            Jenkinsfile.stage(validate, groovy.lang.Closure)
/         Jenkinsfile.post(groovy.lang.Closure)
4            Jenkinsfile.always(groovy.lang.Closure)
?               Jenkinsfile.echo(pipeline unit tests completed)
5            Jenkinsfile.success(groovy.lang.Closure)
5            Jenkinsfile.failure(groovy.lang.Closure)
<               Jenkinsfile.echo(pipeline unit tests FAILED)
5            Jenkinsfile.changed(groovy.lang.Closure)
J               Jenkinsfile.echo(pipeline unit tests results have CHANGED)
6            Jenkinsfile.unstable(groovy.lang.Closure)
   Jenkinsfile.execute()

1Stage 'Checkout' skipped - job status: 'ABORTED'
.Stage 'build' skipped - job status: 'ABORTED'
1Stage 'validate' skipped - job status: 'ABORTED'
$post success skipped as not SUCCESS
$post failure skipped as not FAILURE
!post unstable skipped as SUCCESS
M>>>>>> pipeline call stack -------------------------------------------------
   Jenkinsfile.run()
0      Jenkinsfile.pipeline(groovy.lang.Closure)
0         Jenkinsfile.agent(groovy.lang.Closure)
5         Jenkinsfile.parameters(groovy.lang.Closure)
w            Jenkinsfile.booleanParam({defaultValue=false, description=Whether to run validation stage, name=VALIDATE})
”            Jenkinsfile.string({defaultValue=clean build test -i, description=Tasks and options for the gradle command, name=GRADLE_TASKS_OPTIONS})
2         Jenkinsfile.options(groovy.lang.Closure)
6            Jenkinsfile.logRotator({numToKeepStr=10})
-            Jenkinsfile.buildDiscarder(null)
%            Jenkinsfile.timestamps()
3         Jenkinsfile.triggers(groovy.lang.Closure)
-            Jenkinsfile.pollSCM(*/5 * * * *)
1         Jenkinsfile.stages(groovy.lang.Closure)
=            Jenkinsfile.stage(Checkout, groovy.lang.Closure)
:            Jenkinsfile.stage(build, groovy.lang.Closure)
=            Jenkinsfile.stage(validate, groovy.lang.Closure)
/         Jenkinsfile.post(groovy.lang.Closure)
4            Jenkinsfile.always(groovy.lang.Closure)
?               Jenkinsfile.echo(pipeline unit tests completed)
5            Jenkinsfile.success(groovy.lang.Closure)
5            Jenkinsfile.failure(groovy.lang.Closure)
5            Jenkinsfile.changed(groovy.lang.Closure)
J               Jenkinsfile.echo(pipeline unit tests results have CHANGED)
6            Jenkinsfile.unstable(groovy.lang.Closure)
   Jenkinsfile.execute()

	?Stage 'validate' skipped due to when expression returned false
	$post success skipped as not SUCCESS
	$post failure skipped as not FAILURE
	M>>>>>> pipeline call stack -------------------------------------------------
	   Jenkinsfile.run()
	0      Jenkinsfile.pipeline(groovy.lang.Closure)
	0         Jenkinsfile.agent(groovy.lang.Closure)
	5         Jenkinsfile.parameters(groovy.lang.Closure)
	w            Jenkinsfile.booleanParam({defaultValue=false, description=Whether to run validation stage, name=VALIDATE})
	”            Jenkinsfile.string({defaultValue=clean build test -i, description=Tasks and options for the gradle command, name=GRADLE_TASKS_OPTIONS})
	2         Jenkinsfile.options(groovy.lang.Closure)
	6            Jenkinsfile.logRotator({numToKeepStr=10})
	-            Jenkinsfile.buildDiscarder(null)
	%            Jenkinsfile.timestamps()
	3         Jenkinsfile.triggers(groovy.lang.Closure)
	-            Jenkinsfile.pollSCM(*/5 * * * *)
	1         Jenkinsfile.stages(groovy.lang.Closure)
	=            Jenkinsfile.stage(Checkout, groovy.lang.Closure)
	6               Jenkinsfile.steps(groovy.lang.Closure)
	*                  Jenkinsfile.deleteDir()
	<                  Jenkinsfile.checkout(groovy.lang.Closure)
	:            Jenkinsfile.stage(build, groovy.lang.Closure)
	6               Jenkinsfile.steps(groovy.lang.Closure)
	c                  Jenkinsfile.tool({name=GRADLE_3, type=hudson.plugins.gradle.GradleInstallation})
	X                  Jenkinsfile.withEnv([GRADLE_HOME=GRADLE_3_HOME], groovy.lang.Closure)
	c                     Jenkinsfile.withEnv([PATH=/some/path:GRADLE_3_HOME/bin], groovy.lang.Closure)
	D                        Jenkinsfile.echo(GRADLE_HOME=GRADLE_3_HOME)
	L                        Jenkinsfile.echo(PATH=/some/path:GRADLE_3_HOME/bin)
	C                        Jenkinsfile.sh(gradle clean build test -i)
	=            Jenkinsfile.stage(validate, groovy.lang.Closure)
	5               Jenkinsfile.when(groovy.lang.Closure)
	>                  Jenkinsfile.expression(groovy.lang.Closure)
	/         Jenkinsfile.post(groovy.lang.Closure)
	4            Jenkinsfile.always(groovy.lang.Closure)
	?               Jenkinsfile.echo(pipeline unit tests completed)
	5            Jenkinsfile.success(groovy.lang.Closure)
	5            Jenkinsfile.failure(groovy.lang.Closure)
	5            Jenkinsfile.changed(groovy.lang.Closure)
	J               Jenkinsfile.echo(pipeline unit tests results have CHANGED)
	6            Jenkinsfile.unstable(groovy.lang.Closure)
	H               Jenkinsfile.echo(pipeline unit tests have gone UNSTABLE)
	   Jenkinsfile.execute()
	

M>>>>>> pipeline call stack -------------------------------------------------

   helloMessage.run()

*   helloMessage.call(groovy.lang.Closure)

-      helloMessage.node(groovy.lang.Closure)

G         helloMessage.echo(hello test message: This is a test message)


